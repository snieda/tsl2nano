<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence       http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
<!-- <persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0">  -->
	<persistence-unit name="${persistence-unit}" transaction-type="${transaction-type}">
		<provider>${provider}</provider>
		<!-- known providers (implementing javax.persistence.spi.PersistenceProvider):
		Hibernate  : org.hibernate.ejb.HibernatePersistence 
		OpenJPA    : org.apache.openjpa.persistence.PersistenceProviderImpl
		EclipseLink: org.eclipse.persistence.jpa.PersistenceProvider
		TopLink    : oracle.toplink.essentials.PersistenceProvider
		Acme Pers. : com.acme.persistence
		DataNucleus: org.datanucleus.api.jpa.PersistenceProviderImpl
		BatooJPA   : org.batoo.jpa.core.BatooPersistenceProvider
		 -->
		 
		<!-- JNDI name of the database resource to use -->
		<!-- <jta-data-source>${jta-data-source}</jta-data-source> -->

		<jar-file>${jar-file}</jar-file>
        <exclude-unlisted-classes>false</exclude-unlisted-classes>
	    <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

		<properties>
         	<!-- Hibernate Properties -->
	        <property name="hibernate.connection.driver_class" value="${connection.driver_class}"/>
	        <property name="hibernate.connection.username" value="${connection.username}"/>
	        <property name="hibernate.connection.url" value="${connection.url}"/>
	        <property name="hibernate.connection.password" value="${connection.password}"/>
			<property name="hibernate.dialect" value="${hibernate.dialect}" />
			<property name="hibernate.archive.autodetection" value="class"/>
			<!-- <property name="hibernate.ejb.cfgfile" value="/hibernate.cfg.xml" /> -->
			<!-- <property name="hibernate.hbm2ddl.auto" value="create"/>  -->
			<property name="hibernate.show_sql" value="true"/>
			<property name="hibernate.format_sql" value="true"/>
			<property name="hibernate.use_sql_comments" value="true"/>
			<!-- <property name="hibernate.cache.provider_class" value="org.hibernate.cache.EHCacheProvider"/> -->
			<!-- <property name="hibernate.cache.use_query_cache" value="true"/> -->
			<!-- <property name="hibernate.cache.use_second_level_cache" value="true" /> -->
			<property name="hibernate.cache.use_minimal_puts" value="true" />
			<!-- <property name="hibernate.generate_statistics" value="true"/> -->
			<property name="hibernate.cache.use_structured_entries" value="true"/>
			<property name="hibernate.default_batch_fetch_size" value="500"/>
			<property name="hibernate.jdbc.batch_size" value="50"/>
			<!-- <property name="org.hibernate.FlushMode" value="commit" />  -->
         	<!-- Hibernate End -->

			<!-- Eclipse-Link, OpenJPA and DataNucleus -->
			<property name="javax.persistence.jdbc.driver" value="${connection.driver_class}"/>
	        <property name="javax.persistence.jdbc.user" value="${connection.username}"/>
	        <property name="javax.persistence.jdbc.url" value="${connection.url}"/>
	        <property name="javax.persistence.jdbc.password" value="${connection.password}"/>
	        
	        <!-- OpenJPA -->
	        <!-- <property name="openjpa.ConnectionURL" value="${connection.url}"/>
		    <property name="openjpa.ConnectionDriverName" value="${connection.driver_class}"/>
		    <property name="openjpa.ConnectionUserName" value="${connection.username}"/>
		    <property name="openjpa.ConnectionPassword" value="${connection.password}"/> -->
		    
		    <property name="openjpa.Log" value="DefaultLevel=WARN, Tool=INFO"/>
			<property name="openjpa.RuntimeUnenhancedClasses" value="supported"/>
			<property name="openjpa.DynamicEnhancementAgent" value="true" />
		    
         	<!-- TopLink -->
            <property name="toplink.jdbc.driver" value="${connection.driver_class}"/>
            <property name="toplink.jdbc.url" value="${connection.url}"/>
            <property name="toplink.jdbc.user" value="${connection.username}"/>
            <property name="toplink.jdbc.password" value="${connection.password}"/>
            <property name="toplink.logging.level" value="FINE"/>
            <property name="toplink.weaving" value="false"/>
            <property name="toplink.target-database" value="Oracle"/>
			<!-- <property name="toplink.ddl-generation" value="drop-and-create-tables"/> -->
			<!-- if you work with generated ids using sequences (used by AUTO mode, too), toplink
			     needs the following database table:
				CREATE TABLE SEQUENCE
				(
					SEQ_NAME	   	VARCHAR2(20),
					SEQ_COUNT     	NUMBER(10)
				)
				;
				INSERT INTO SEQUENCE VALUES ('SEQ_GEN',1);
			      -->
         	<!-- Glassfish End -->
		</properties>
	</persistence-unit>
	<persistence-unit name="replication" transaction-type="${replication.transaction-type}">
		<provider>${replication.provider}</provider>
		<!-- JNDI name of the database resource to use -->
		<!-- <jta-data-source>${replication.jta-data-source}</jta-data-source> -->

		<jar-file>${replication.jar-file}</jar-file>
        <exclude-unlisted-classes>false</exclude-unlisted-classes>
	    <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

		<properties>
         	<!-- Hibernate Properties -->
	        <property name="hibernate.connection.driver_class" value="${replication.driver_class}"/>
	        <property name="hibernate.connection.username" value="${replication.username}"/>
	        <property name="hibernate.connection.url" value="${replication.url}"/>
	        <property name="hibernate.connection.password" value="${replication.password}"/>
			<property name="hibernate.archive.autodetection" value="class"/>
			<!-- <property name="hibernate.ejb.cfgfile" value="/hibernate.cfg.xml" /> -->
			<property name="hibernate.dialect" value="${replication.dialect}" />
			<property name="hibernate.hbm2ddl.auto" value="create"/>
			<property name="hibernate.show_sql" value="true"/>
			<!-- <property name="hibernate.cache.provider_class" value="org.hibernate.cache.EHCacheProvider"/> -->
			<!-- <property name="hibernate.cache.use_second_level_cache" value="false"/> -->
			<!-- <property name="hibernate.cache.use_query_cache" value="false"/> -->
			<!-- <property name="hibernate.generate_statistics" value="false"/> -->
			<property name="hibernate.connection.autocommit" value="true"/>
			<property name="hibernate.cache.use_structured_entries" value="true"/>
			<property name="hibernate.cache.use_second_level_cache" value="true"/>
		</properties>
	</persistence-unit>
</persistence>
