<?xml version="1.0" encoding="UTF-8"?>
<SIShell name="sishell.xml" width="79" height="22" style="1" bars="true" refreshConfig="false" useNetworkExtension="true" sequential="false">
   <definition name="image.out">
      <value class="java.lang.String">-out</value>
   </definition>
   <root class="de.tsl2.nano.incubation.terminal.item.Container" name="Toolbox" multiple="false" sequential="false">
      <description>Helpful Utilities</description>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Printing" multiple="false" sequential="false">
         <item class="de.tsl2.nano.incubation.terminal.item.selector.FileSelector" name="source" multiple="false" sequential="false">
            <directory>${user.dir}</directory>
            <include>.*</include>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="printer">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>printer to use</description>
            <value class="java.lang.String">PDFCreator</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="jobname">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>print job name</description>
            <value class="java.lang.String">test</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="mimetype">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>mime type</description>
            <value class="java.lang.String">MIME_PCL</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.selector.FieldSelector" name="papersize" multiple="false" sequential="false">
            <description>paper size</description>
            <cls>javax.print.attribute.standard.MediaSizeName</cls>
            <field>javax.print.attribute.standard.MediaSizeName</field>
            <value class="java.lang.String">ISO_A4</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="quality">
            <constraints type="java.lang.String" nullable="true" length="6" scale="-1" precision="-1">
               <defaultValue class="java.lang.String">NORMAL</defaultValue>
               <value class="java.lang.String">NORMAL</value>
               <value class="java.lang.String">HIGH</value>
            </constraints>
            <description>print quality</description>
            <value class="java.lang.String">NORMAL</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="priority">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>print priority (1-100)</description>
            <value class="java.lang.String">1</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="xsltfile">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>xsl-fo transformation file to do a apache fop</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="username">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>user name to be used by the printer</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.MainAction" name="print">
            <condition>
               <expression>quality=NORMAL</expression>
            </condition>
            <mainClass>de.tsl2.nano.util.PrintUtil</mainClass>
            <method>main</method>
            <argNames length="10">
               <string>source</string>
               <string>printer</string>
               <string>jobname</string>
               <string>papersize</string>
               <string>quality</string>
               <string>priority</string>
               <string>xsltfile</string>
               <string>mimetype</string>
               <string>jobname</string>
               <string>username</string>
            </argNames>
         </item>
      </item>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Crypt" multiple="false" sequential="false">
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="password">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>password for encryption - if needed by algorithm</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="algorithm">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>encryption algorithm</description>
            <value class="java.lang.String">PBEWithMD5AndDES</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="text">
            <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
            <description>text to be encrypted. if it starts with &apos;file:&apos; the file will be read</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="base64">
            <constraints type="java.lang.Boolean" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>whether base64 encoding should be used</description>
            <value class="java.lang.Boolean">true</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="include">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>regular expression to constrain text parts to be encrypted</description>
            <value class="java.lang.String">.*</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.MainAction" name="Crypt">
            <mainClass>de.tsl2.nano.core.util.Crypt</mainClass>
            <method>main</method>
            <argNames length="5">
               <string>password</string>
               <string>algorithm</string>
               <string>text</string>
               <string>base64</string>
               <string>include</string>
            </argNames>
         </item>
      </item>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Permutator" multiple="false" sequential="false">
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="source">
            <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
            <description>source collection</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="transformer">
            <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
            <description>transforming action</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="swap">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>whether to swap key and values in destination-map</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="backward">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>action to do a back-transformation for each keys value</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.MainAction" name="Permutator">
            <mainClass>de.tsl2.nano.core.util.Permutator</mainClass>
            <method>main</method>
            <argNames length="4">
               <string>source</string>
               <string>transformer</string>
               <string>swap</string>
               <string>backward</string>
            </argNames>
         </item>
      </item>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Xml" multiple="false" sequential="false">
         <item class="de.tsl2.nano.incubation.terminal.item.selector.FileSelector" name="source" multiple="false" sequential="false">
            <directory>${user.dir}</directory>
            <include>.*xml</include>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.selector.FileSelector" name="xsl-transformation" multiple="false" sequential="false">
            <directory>${user.dir}</directory>
            <include>.*xsl.*</include>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="xsl-destination">
            <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
            <description>xsl destination file</description>
            <value class="java.lang.String">${user.dir}/${source}.html</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="xpath-expression">
            <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
            <description>xpath expression</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="transformVel">
            <mainClass>de.tsl2.nano.util.XmlGenUtil</mainClass>
            <method>transformVel</method>
            <argNames length="2">
               <string>source</string>
               <string>ENVIRONMENT</string>
            </argNames>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="transformXsl">
            <mainClass>de.tsl2.nano.util.XmlGenUtil</mainClass>
            <method>transformXsl</method>
            <argNames length="3">
               <string>source</string>
               <string>xsl-transformation</string>
               <string>xsl-destination</string>
            </argNames>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="xpath">
            <mainClass>de.tsl2.nano.util.XmlGenUtil</mainClass>
            <method>xpath</method>
            <argNames length="2">
               <string>xpath-expression</string>
               <string>source</string>
            </argNames>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.selector.Sequence" name="sequential echo command" multiple="false" sequential="false">
            <action class="de.tsl2.nano.incubation.terminal.item.Command" name="sequential echo command">
               <mainClass>de.tsl2.nano.core.execution.SystemUtil</mainClass>
               <method>execute</method>
               <argNames length="0"/>
               <cmd>echo</cmd>
            </action>
            <sequence class="de.tsl2.nano.incubation.terminal.item.selector.XPathSelector" name="xpathselector" multiple="false" sequential="false">
               <xml>bin/sishell.xml</xml>
               <xpath>//@name</xpath>
            </sequence>
         </item>
      </item>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Html" multiple="false" sequential="false">
         <item class="de.tsl2.nano.incubation.terminal.item.selector.FileSelector" name="source" multiple="false" sequential="false">
            <directory>${user.dir}</directory>
            <include>.*.markdown</include>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.MainAction" name="Markdown (TxtMark)">
            <method>com.github.rjeschke.txtmark.cmd.Run.main</method>
            <argNames length="1">
               <string>source</string>
            </argNames>
         </item>
      </item>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Ant" multiple="false" sequential="false">
         <item class="de.tsl2.nano.incubation.terminal.item.selector.AntTaskSelector" name="task" multiple="false" sequential="false">
            <description>pack given filesets to zip</description>
            <value class="java.lang.String">Jar</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.selector.PropertySelector" name="properties" multiple="false" sequential="false">
            <description>ant task properties</description>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="filesets">
            <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
            <description>filesets expression</description>
            <value class="java.lang.String">./:{**/*.*ml}**/*.xml;${user.dir}:{*.txt}</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="runTask">
            <mainClass>de.tsl2.nano.execution.AntRunner</mainClass>
            <method>runTask</method>
            <argNames length="3">
               <string>task</string>
               <string>properties</string>
               <string>filesets</string>
            </argNames>
         </item>
      </item>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Net" multiple="false" sequential="false">
         <description>wrench.png</description>
         <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Scan" multiple="false" sequential="false">
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="ip">
               <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>internet address to be scanned</description>
               <value class="java.lang.String">192.168.242.60</value>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="lowest-port">
               <constraints type="java.lang.Integer" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>lowest port to be scanned</description>
               <value class="java.lang.Integer">0</value>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="highest-port">
               <constraints type="java.lang.Integer" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>highest port to be scanned</description>
               <value class="java.lang.Integer">100</value>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Action" name="scans">
               <mainClass>de.tsl2.nano.core.util.NetUtil</mainClass>
               <method>scans</method>
               <argNames length="3">
                  <string>(int)lowest-port</string>
                  <string>(int)highest-port</string>
                  <string>(java.lang.String[])ip</string>
               </argNames>
            </item>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Container" name="WCopy" multiple="false" sequential="false">
            <description>Downloads a site</description>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="url">
               <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
               <description>url to get files from</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="dir">
               <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>local directory to save the downloaded files</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="include">
               <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>regular expression for files to download</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="exclude">
               <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>regular exression for files to be filtered</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Action" name="wcopy">
               <mainClass>de.tsl2.nano.core.util.NetUtil</mainClass>
               <method>wcopy</method>
               <argNames length="4">
                  <string>url</string>
                  <string>dir</string>
                  <string>include</string>
                  <string>exclude</string>
               </argNames>
            </item>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Proxy" multiple="false" sequential="false">
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="uri">
               <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
               <description>uri to evaluate proxy for (http, https, ftp or socket)</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="proxy">
               <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>new proxy (e.g.: myproxy.myorg.org)</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="user">
               <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>new proxies user</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="password">
               <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>new proxies password</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Action" name="proxy">
               <mainClass>de.tsl2.nano.core.util.NetUtil</mainClass>
               <method>proxy</method>
               <argNames length="4">
                  <string>uri</string>
                  <string>proxy</string>
                  <string>user</string>
                  <string>password</string>
               </argNames>
            </item>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Download" multiple="false" sequential="false">
            <description>Downloads a single file</description>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="url">
               <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
               <description>url to be loaded</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="dir">
               <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
               <description>local directory to save the downloaded file</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Action" name="download">
               <mainClass>de.tsl2.nano.core.util.NetUtil</mainClass>
               <method>download</method>
               <argNames length="2">
                  <string>url</string>
                  <string>dir</string>
               </argNames>
            </item>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Browse" multiple="false" sequential="false">
            <description>Shows the given URL</description>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="url">
               <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
               <description>url to be loaded</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Action" name="browse">
               <mainClass>de.tsl2.nano.core.util.NetUtil</mainClass>
               <method>browse</method>
               <argNames length="2">
                  <string>url</string>
                  <string>out</string>
               </argNames>
            </item>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Restful" multiple="false" sequential="false">
            <description>Calls a RESTful service</description>
            <item class="de.tsl2.nano.incubation.terminal.item.Input" name="url">
               <constraints type="java.lang.String" nullable="false" length="-1" scale="-1" precision="-1"/>
               <description>URL of a RESTful service</description>
               <value class="java.lang.String">http://echo.jsontest.com/title/ipsum</value>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.selector.PropertySelector" name="arguments" multiple="false" sequential="false">
               <description>RESTful arguments</description>
            </item>
            <item class="de.tsl2.nano.incubation.terminal.item.Action" name="getRestful">
               <mainClass>de.tsl2.nano.core.util.NetUtil</mainClass>
               <method>getRestful</method>
               <argNames length="2">
                  <string>url</string>
                  <string>arguments</string>
               </argNames>
            </item>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="getNetInfo">
            <mainClass>de.tsl2.nano.core.util.NetUtil</mainClass>
            <method>getNetInfo</method>
            <argNames length="0"/>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="getFreePort">
            <mainClass>de.tsl2.nano.core.util.NetUtil</mainClass>
            <method>getFreePort</method>
            <argNames length="0"/>
         </item>
      </item>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="File-Operation" multiple="false" sequential="false">
         <item class="de.tsl2.nano.incubation.terminal.item.selector.DirSelector" name="directory" multiple="false" sequential="false" showFiles="true">
            <root class="java.lang.String">${user.dir}</root>
            <include>.*</include>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="file">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>regular expression (with ant-like path **) as file filter</description>
            <value class="java.lang.String">**/[\w]+\.txt</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Input" name="destination">
            <constraints type="java.lang.String" nullable="true" length="-1" scale="-1" precision="-1"/>
            <description>destination directory for file operations</description>
            <value class="java.lang.String">${user.dir}</value>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="Details">
            <mainClass>de.tsl2.nano.core.util.FileUtil</mainClass>
            <method>getDetails</method>
            <argNames length="1">
               <string>(java.io.File)file</string>
            </argNames>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.selector.FileSelector" name="List" multiple="false" sequential="false">
            <directory>${user.dir}</directory>
            <include>directory</include>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="Delete">
            <mainClass>de.tsl2.nano.core.util.FileUtil</mainClass>
            <method>forEach</method>
            <argNames length="3">
               <string>directory</string>
               <string>file</string>
               <string>(de.tsl2.nano.core.execution.IRunnable)@de.tsl2.nano.core.util.FileUtil:DO_DELETE</string>
            </argNames>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.Action" name="Copy">
            <mainClass>de.tsl2.nano.core.util.FileUtil</mainClass>
            <method>forEach</method>
            <argNames length="3">
               <string>directory</string>
               <string>file</string>
               <string>(de.tsl2.nano.core.execution.IRunnable)@de.tsl2.nano.core.util.FileUtil:DO_COPY</string>
            </argNames>
         </item>
         <item class="de.tsl2.nano.incubation.terminal.item.MainAction" name="Imageviewer">
            <mainClass>de.tsl2.nano.incubation.terminal.AsciiImage</mainClass>
            <method>main</method>
            <argNames length="4">
               <string>file</string>
               <string>image.out</string>
               <string>sishell.width</string>
               <string>sishell.height</string>
            </argNames>
         </item>
      </item>
      <item class="de.tsl2.nano.incubation.terminal.item.Container" name="Shell" multiple="false" sequential="false">
         <description>Starts OS Shell commands</description>
         <item class="de.tsl2.nano.incubation.terminal.item.Command" name="command">
            <mainClass>de.tsl2.nano.core.execution.SystemUtil</mainClass>
            <method>execute</method>
            <argNames length="0"/>
            <cmd>cmd /C</cmd>
         </item>
      </item>
   </root>
</SIShell>