unknown.command= is not a known command!
ask.enter=>>> PLEASE HIT ENTER FOR THE NEXT PAGE OR ENTER A SELECTION <<<
addItem=<<<<<<<<<<   ADD ITEM   >>>>>>>>>>>>>>>>>
changeItem=<<<<<<<<<   CHANGE ITEM   >>>>>>>>>>>>>>>
changeConstraints=<<<<<<   CHANGE CONSTRAINTS   >>>>>>>>>>>
removeItem=<<<<<<<<<   REMOVE ITEM   >>>>>>>>>>>>>>>
changeTerminal=<<<<<<<<<   CHANGE SHELL   >>>>>>>>>>>>>>

ask.number=Please enter a number between 1 and 
message.shutdown="\n|\n|\nSHUTDOWN SI-Shell!\n|\nsaved changes to\n {0}\nand\n {0}.properties
error.ant.missing=You are not online and the file "{0}" needs ANT to be inside the classpath!\nPlease copy ant.jar and ant-launcher.jar into the .sishell directory.
                    
help=The SIShell is configured through xml files with only four types of items.\n\
 (+) Container: holds childs of all types, but normally Options\n\
 (*) Input    : user input, has to be terminated with ENTER\n\
 (!) Action   : starts a command --> if terminated, the user has to hit ENTER\n\
 ( ) Option   : is a simple child of a Container/Tree\n\n\
Extended Implementations are:\n\
  MainAction   : extension of Action, using main(args[]) as method\n\
  Command      : extension of Action calling system commands\n\
  Selector     : extension of Action, using the result as selection list\n\
  File         : file selection\n\
  Dir          : directory selection\n\
  CSV          : reads a csv file to use the content as selection list\n\
  SQL          : executes an sql query to evaluate the selection list\n\
  XPath        : executes an xpath query to evaluate the selection list\n\
  Properties   : property map\n\
  Field        : bean fields\n\
  Sequence     : executes a background action on each item of a selection list\n\
The items can have the following properties:\n\
 x: changed or visited\n\
 §: duty (has to be visited)\n\n\
You can leave an item with key ENTER, you can show this help typing ':help'\n\
To set reset an items value, type 'null' as value\n\
If you leave the entire menu with ENTER, a property file with the new values\n\
will be written, if you hit Strg+c, the entire menu will be aborted.\n\
If your input starts with ':', one of the following commands can be entered:\n\
  properties: list of all property values\n\
  info      : system info will show\n\
  platform  : prints content of all platform (JMX)MBeans\n
  quit      : will stop the shell, save the property file.\n\
  record    : will record your actions to be saved as batch\n\
  stop      : stops the macro\n\
  reflect   : calls a method per reflection\n\
  help      : shows this help\n\
  admin     : administrate your current item (adding/removing child-items)\n\
  schedule:<item-no>[:delay][:period[:end]]] the item, which\
  has to be an action will be scheduled for the given milliseconds\n\
It is possible to define workflow conditions, so items are not visible, if their\n\
  condition is negative.\n\
If an item container (a tree) has only one visible item, that item will be activated.\
If you turn on 'sequence', the user doesn't have to enter each command number - all\
 items of a container will be asked sequentially.\
You can set the mode 'useNetworkExtension' to true, if you want, that the shell \
downloads required (by action-definitions) jar-files itself.\
On Unix-Systems, you should provide the jvm argument '-Dfile.encoding=Cp1252' to\
see frames with bars.