<!-- =========================================================================
 build script for tsl2.nano.h5 and base libraries
 author: Thomas Schneider 2013
 - creates jar files in target-directory
 - creates runnable jar file in target/h5.sample
 - starts that runnable to be debuggable from remote
 
to create a new application-version, do the following:
 - change build.version of all build*.properties
 - change MANIFEST.MF of all projects
 - change run.bat to start jar with new version number
========================================================================= -->
<project default="distribute.2nano" name="distrubute.2nano">
	<property name="target.dir" value="../target" />
	<property name="test.name" value="test.h5.sample" />
	<property name="test.dir" value="${target.dir}/${test.name}" />

	<target name="distribute.2nano">
		<!-- cleaning will remove all files from project origin!!! -->
		<!-- <property name="refactore.clean" value="true" /> -->
		<property name="sh.compile.classpath2" value="../tsl2.nano.common" />
		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-common.properties" />
		</ant>
		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-serviceaccess.properties" />
		</ant>
		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-directaccess.properties" />
		</ant>
		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-incubation.properties" />
		</ant>
		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-ormliteprovider.properties" />
		</ant>

		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-ebeanprovider.properties" />
		</ant>

		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-jarresolver.properties" />
		</ant>

		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-h5.properties" />
		</ant>

		<antcall target="core.2nano" />
		<antcall target="sample.2nano" />
		<antcall target="test.2nano" />
	</target>

	<!-- 
		extract core-classes of common into an own jar
	-->
	<target name="core.2nano" unless="disable_core.2nano">
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.common/src/resources/build-tsl2.nano.common.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.common/bin" />
			<property name="sh.jar.destination" value="${target.dir}/tsl2.nano.core.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.common/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="**/core/**" />
			<property name="sh.jar.include2" value="org/**" />
		</ant>
	</target>

	<!-- 
		create jar for small sample-codes
	-->
	<target name="sample.2nano" unless="disable_sample.2nano">
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../target/test.h5.sample/h5.sample" />
			<property name="sh.jar.destination" value="${target.dir}/tsl2.nano.h5.sample.jar" />
			<property name="sh.jar.include" value="generated*/**/my/**" />
			<property name="sh.jar.include2" value="mypersistence*.xml" />
			<property name="sh.jar.include3" value="runServer.bat" />
			<property name="sh.jar.include4" value="timedb.s*" />
		</ant>
	</target>

	
	<!-- 
		distribute all libs to target and start a test-project for h5
	-->
	<target name="test.2nano" unless="disable_test.2nano">

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="../" />
			<property name="sh.copy.destination" value="${target.dir}" />
			<property name="sh.copy.include" value="tsl2.nano.*/**/*.jar" />
			<property name="sh.copy.flatten" value="true" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="${target.dir}" />
			<property name="sh.copy.destination" value="${test.dir}" />
			<property name="sh.copy.include" value="tsl2.nano.h5*.jar" />
			<property name="sh.copy.exclude" value="*src.jar" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.common/bin" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="**/core/**" />
			<property name="sh.jar.include2" value="org/**" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.common" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="shell.xml" />
			<property name="sh.jar.include2" value="runsh.bat" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.directaccess/src/resources" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="**" />
			<property name="sh.jar.exclude" value="build-tsl2.nano.h5.propertiess" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.jarresolver/src/resources" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="**" />
			<property name="sh.jar.exclude" value="build*.propertiess" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="${target.dir}" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="tsl2*.jar" />
			<property name="sh.jar.include2" value="*hib*-jpa-*-api-*.jar" />
			<property name="sh.jar.include3" value="*-api_*.jar" />
			<property name="sh.jar.include4" value="simple-xml*.jar" />
			<property name="sh.jar.exclude" value="*tsl2.nano.core*.jar" />
			<property name="sh.jar.exclude2" value="*src.jar" />
			<property name="sh.jar.exclude3" value="tsl2.nano.h5.0*.jar" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="${target.dir}" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="slf4j-api-1.7.*.jar" />
		</ant>
		
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.exec.cmd">
			<property name="sh.exec.cmd.dir" value="${test.dir}" />
			<property name="sh.exec.cmd.arg1" value="run.bat h5.sample debug nopause" />
		</ant>
	</target>

</project>
