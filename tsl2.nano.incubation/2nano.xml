<!-- =========================================================================
 build script for tsl2.nano.h5 and base libraries
 author: Thomas Schneider 2013
 - creates jar files in target-directory
 - creates runnable jar file in target/h5.sample
 - starts that runnable to be debuggable from remote
 
to create a new application-version, do the following:
 - change build.version of all build*.properties
 - change MANIFEST.MF of all projects
 - change run.bat to start jar with new version number
 
to do a fast distribution without re-compiling tests and analysis,
set the following jvm properties:
-Dsh.disable.clean=true 
-Dsh.disable.compile=true 
-Dsh.disable.junit=true 
-Danalysis.disable.findbugs=true 
-Danalysis.disable.pmd=true 
-Danalysis.disable.cpd=true 
-Danalysis.disable.checkstyle=true

========================================================================= -->
<project default="distribute.2nano" name="distrubute.2nano">
	<property file="../tsl2.nano.common/shell.properties" />
	<property name="target.dir" value="../../target" />
	<property name="test.name" value="test.h5.sample" />
	<property name="test.dir" value="${target.dir}/${test.name}" />

	<target name="distribute.2nano">
		<!-- cleaning will remove all files from project origin!!! -->
		<!-- <property name="refactore.clean" value="true" /> -->
		<ant antfile="project-distribute.xml" inheritall="false">
			<property name="refactore.property.file" value="${basedir}/project/distribute-common.properties" />
			<property name="basedir" value="../tsl2.nano.common" />
			<property name="sh.compile.classpath2" value="../tsl2.nano.common" />
			<property name="target.dir" value="../../target" />
		</ant>
		<ant antfile="project-distribute.xml" inheritall="false">
			<property name="refactore.property.file" value="${basedir}/project/distribute-serviceaccess.properties" />
			<property name="basedir" value="../tsl2.nano.serviceaccess" />
			<property name="sh.compile.classpath2" value="../tsl2.nano.common" />
			<property name="sh.compile.srcdir2" value="../tsl2.nano.serviceaccess/src/main" />
			<property name="target.dir" value="../../target" />
		</ant>
		<ant antfile="project-distribute.xml" inheritall="false">
			<property name="refactore.property.file" value="${basedir}/project/distribute-directaccess.properties" />
			<property name="basedir" value="../tsl2.nano.directaccess" />
			<property name="sh.compile.classpath2" value="../tsl2.nano.common" />
			<property name="sh.compile.classpath3" value="../tsl2.nano.serviceaccess" />
			<property name="target.dir" value="../../target" />
		</ant>
		<ant antfile="project-distribute.xml" inheritall="false">
			<property name="refactore.property.file" value="${basedir}/project/distribute-incubation.properties" />
			<property name="basedir" value="../tsl2.nano.incubation" />
			<property name="sh.compile.classpath2" value="../tsl2.nano.common" />
			<property name="target.dir" value="../../target" />
		</ant>
		<ant antfile="project-distribute.xml" inheritall="false">
			<property name="refactore.property.file" value="${basedir}/project/distribute-ormliteprovider.properties" />
			<property name="basedir" value="../tsl2.nano.ormliteprovider" />
			<property name="sh.compile.classpath2" value="../tsl2.nano.common" />
			<property name="sh.compile.classpath3" value="../tsl2.nano.serviceaccess" />
			<property name="sh.compile.classpath4" value="../tsl2.nano.directaccess" />
			<property name="target.dir" value="../../target" />
		</ant>

		<ant antfile="project-distribute.xml" inheritall="false">
			<property name="refactore.property.file" value="${basedir}/project/distribute-ebeanprovider.properties" />
			<property name="basedir" value="../tsl2.nano.ebeanprovider" />
			<property name="sh.compile.classpath2" value="../tsl2.nano.common" />
			<property name="sh.compile.classpath3" value="../tsl2.nano.serviceaccess" />
			<property name="sh.compile.classpath4" value="../tsl2.nano.directaccess" />
			<property name="target.dir" value="../../target" />
		</ant>

		<ant antfile="project-distribute.xml" inheritall="false">
			<property name="refactore.property.file" value="${basedir}/project/distribute-jarresolver.properties" />
			<property name="basedir" value="../tsl2.nano.jarresolver" />
			<property name="sh.compile.classpath2" value="../tsl2.nano.common" />
			<property name="target.dir" value="../../target" />
		</ant>

		<ant antfile="project-distribute.xml">
			<property name="refactore.property.file" value="${basedir}/project/distribute-h5.properties" />
			<property name="basedir" value="../tsl2.nano.h5" />
			<property name="sh.compile.classpath2" value=".." />
			<property name="sh.compile.classpath3" value="../tsl2.nano.serviceaccess" />
			<property name="sh.compile.classpath4" value="../tsl2.nano.directaccess" />
			<property name="sh.jar.exclude" value="src/sample/**" />
			<property name="sh.jar.exclude2" value="src/test/**" />
			<property name="target.dir" value="../../target" />
		</ant>

		<antcall target="core.2nano" />
		<antcall target="sample.2nano" />
		<antcall target="test.2nano" />
	</target>

	<!-- 
		extract core-classes of common into an own jar
	-->
	<target name="core.2nano" unless="disable_core.2nano">
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.common/src/resources/build-tsl2.nano.common.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.common/bin" />
			<property name="sh.jar.destination" value="${target.dir}/tsl2.nano.core.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.common/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="**/core/**" />
			<property name="sh.jar.include2" value="org/**" />
		</ant>
	</target>

	<!-- 
		create jar for small sample-codes
	-->
	<target name="sample.2nano" unless="disable_sample.2nano">
	<!--	<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../target/test.h5.sample/h5.sample" />
			<property name="sh.jar.destination" value="${target.dir}/tsl2.nano.h5.sample.jar" />
			<property name="sh.jar.include" value="generated*/**/my/**" />
			<property name="sh.jar.include2" value="mypersistence*.xml" />
			<property name="sh.jar.include3" value="runServer.cmd" />
			<property name="sh.jar.include4" value="timedb.s*" />
		</ant> -->
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.h5/src/sample" />
			<property name="sh.jar.destination" value="${target.dir}/tsl2.nano.h5.sample.jar" />
			<property name="sh.jar.exclude" value="old" />
		</ant>
	</target>

	
	<!-- 
		distribute all libs to target and start a test-project for h5
	-->
	<target name="test.2nano" unless="disable_test.2nano">
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="../" />
			<property name="sh.copy.destination" value="${target.dir}" />
			<property name="sh.copy.include" value="tsl2.nano.*/**/*.jar" />
			<property name="sh.copy.flatten" value="true" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="${target.dir}" />
			<property name="sh.copy.destination" value="${test.dir}" />
			<property name="sh.copy.include" value="tsl2.nano.h5*.jar" />
			<property name="sh.copy.exclude" value="*src.jar" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.common/bin" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="**/core/**" />
			<property name="sh.jar.include2" value="org/**" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.common" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="shell.xml" />
			<property name="sh.jar.include2" value="runsh.bat" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.directaccess/src/resources" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="**" />
			<property name="sh.jar.exclude" value="build-tsl2.nano.h5.properties" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.jarresolver/src/resources" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="**" />
			<property name="sh.jar.exclude" value="build*.properties" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="${target.dir}" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="tsl2*.jar" />
			<property name="sh.jar.include2" value="*hib*-jpa-*-api-*.jar" />
			<property name="sh.jar.include3" value="*-api_*.jar" />
			<property name="sh.jar.include4" value="simple-xml*.jar" />
			<property name="sh.jar.exclude" value="*tsl2.nano.core*.jar" />
			<property name="sh.jar.exclude2" value="*src.jar" />
			<property name="sh.jar.exclude3" value="tsl2.nano.h5.0*.jar" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="${target.dir}" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<!--<property name="sh.jar.include" value="slf4j-api-1.7.*.jar" />-->
			<property name="sh.jar.include" value="java_websocket.jar" />
			<property name="sh.jar.include2" value="javax.json-*.jar" />
			<property name="sh.jar.include3" value="xchart*.jar" />
			<property name="sh.jar.include4" value="VectorGraphics2D*.jar" />
		</ant>

		
		<!-- 
			create war-file to start nano.h5 through a rest-service inside an ejb-container 
		-->
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.serviceaccess/bin" />
			<property name="sh.jar.destination" value="${target.dir}/tslx.nano.serviceaccess-noejb.${build.version}.jar" />
			<property name="sh.jar.exclude" value="**/*ServiceBean.class" />
			<property name="sh.jar.exclude2" value="**/MANIFEST.MF" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="../tsl2.nano.h5/bin" />
			<property name="sh.copy.destination" value="${target.dir}/war/WEB-INF/classes" />
			<property name="sh.copy.exclude" value="**/test/**" />
			<property name="sh.copy.exclude2" value="**/WEB-INF/**" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="../tsl2.nano.directaccess/src/resources" />
			<property name="sh.copy.destination" value="${target.dir}/war/WEB-INF/classes" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="${target.dir}" />
			<property name="sh.copy.destination" value="${target.dir}/war/WEB-INF/lib" />
			<property name="sh.copy.include" value="tsl2*.jar" />
			<property name="sh.copy.include2" value="simple-xml*.jar" />
			<property name="sh.copy.include3" value="java_websocket.jar" />
			<property name="sh.copy.exclude" value="*src.jar" />
			<property name="sh.copy.exclude2" value="*tsl2.nano.core*.jar" />
			<property name="sh.copy.exclude3" value="tsl2.nano.h5.0*.jar" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="${target.dir}" />
			<property name="sh.copy.destination" value="${target.dir}/war/WEB-INF/lib" />
			<property name="sh.copy.include" value="tslx*.jar" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="${target.dir}" />
			<property name="sh.copy.destination" value="${target.dir}/war/WEB-INF/lib" />
			<property name="sh.copy.include" value="simple-xml*.jar" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="${target.dir}" />
			<property name="sh.copy.destination" value="${target.dir}/war/WEB-INF/lib" />
			<property name="sh.copy.include" value="java_websocket.jar" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="../tsl2.nano.h5/bin" />
			<property name="sh.copy.destination" value="${target.dir}/war/" />
			<property name="sh.copy.include" value="**/web.xml" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="${target.dir}/war" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}.war" />
			<property name="sh.jar.exclude" value="**/tsl2.nano.h5.0*.jar" />
			<property name="sh.jar.exclude2" value="**/tsl2.nano.serviceaccess*.jar" />
		</ant>

		<!-- create SI Shell -->
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.incubation/src/resources/build-tsl2.nano.incubation.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.common/bin" />
			<property name="sh.jar.destination" value="${test.dir}/sishell.${build.version}.jar" />
			<property name="sh.jar.exclude" value="**/test/**" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.incubation/src/resources/build-tsl2.nano.incubation.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.common/lib" />
			<property name="sh.jar.destination" value="${test.dir}/sishell.${build.version}.jar" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.incubation/src/resources/build-tsl2.nano.incubation.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.jarresolver/bin" />
			<property name="sh.jar.destination" value="${test.dir}/sishell.${build.version}.jar" />
			<property name="sh.jar.exclude" value="**/test/**" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.incubation/src/resources/build-tsl2.nano.incubation.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.incubation/bin" />
			<property name="sh.jar.destination" value="${test.dir}/sishell.${build.version}.jar" />
			<property name="sh.jar.exclude" value="**/test/**" />
		</ant>
		
		<!-- create signed standalone -->
		<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copyfile">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.copyfile.file" value="${test.dir}/tsl2.nano.h5.${build.version}.jar" />
			<property name="sh.copyfile.tofile" value="${test.dir}/tsl2.nano.h5.${build.version}-standalone.jar" />
		</ant>
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.jar">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.jar.srcdir" value="../tsl2.nano.h5" />
			<property name="sh.jar.destination" value="${test.dir}/tsl2.nano.h5.${build.version}-standalone.jar" />
			<property name="sh.jar.manifest" value="../tsl2.nano.h5/META-INF/MANIFEST.MF" />
			<property name="sh.jar.include" value="standalone.zip" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copyfile">
			<property file="../tsl2.nano.h5/src/resources/build-tsl2.nano.h5.properties" />
			<property name="sh.copyfile.file" value="${test.dir}/tsl2.nano.h5.${build.version}-standalone.jar" />
			<property name="sh.copyfile.tofile" value="${test.dir}/tsl2.nano.h5.${build.version}-signed.jar" />
		</ant>
		<!-- using key:
		keytool -genkey -keystore tsl2store -alias tsl2 -validity 1800
		passwd: tsl2tsl2, name: tsl2, surname: tsl2, orga: tsl2
		jarsigner -keystore tsl2store -storepass tsl2tsl2 <jar-file> <alias> -tsacert <alias> -->
		<signjar alias="tsl2"  keystore="tsl2store" storepass="tsl2tsl2"  jar="${test.dir}/tsl2.nano.h5.${build.version}-signed.jar" />

		<!-- create test environment -->
		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.copy">
			<property name="sh.copy.srcdir" value="../tsl2.nano.h5/src/resources" />
			<property name="sh.copy.destination" value="${test.dir}" />
			<property name="sh.copy.include" value="run.bat" />
		</ant>

		<ant antfile="../tsl2.nano.common/shell.xml" target="sh.exec.cmd">
			<property name="sh.exec.cmd.dir" value="${test.dir}" />
			<property name="sh.exec.cmd.arg1" value="run.bat h5.sample debug nopause" />
		</ant>
	</target>

</project>
