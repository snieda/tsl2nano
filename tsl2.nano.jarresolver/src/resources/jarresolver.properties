##############################################################################
# Properties for tsl2.nano.jarresolver (cp Thomas Schneider / 2014)
# JarResolver is able to dynamically load library-dependencies on runtime
# perhaps use findjar.com to fill the package dependencies
##############################################################################

#-----------------------------------------------------------------------------
# url to update this property file. if set, it will overwrite your local entries!
# comment/unset it to use only your local definitions!
#-----------------------------------------------------------------------------
default.update.url=http://sourceforge.net/projects/tsl2nano/files/0.0.5/jarresolver.properties

#-----------------------------------------------------------------------------
# Maven Properties
#-----------------------------------------------------------------------------
name=JarResolver
# where to download the actual maven binaries from
mvn.download.url=http://mirror.lwnetwork.org.uk/APACHE/maven/maven-3/3.2.1/binaries/apache-maven-3.2.1-bin.zip
# which maven repositories to use
mvn.repository.url.1=http://repo.maven.apache.org/maven2
mvn.repository.url.2=http://mvnrepository.com
mvn.repository.url.3=http://mirrors.ibiblio.org/pub/mirrors/maven2
#mvn.repository.url.3=search.maven.org
#mvn.repository.url.3=http://jarsm2.dyndns.dk

# current local repository - where to store all jars into. normally the ${basedir} will be used.
#dir.local.repository=./

#-----------------------------------------------------------------------------
# Dependencies
#-----------------------------------------------------------------------------

# comma separated list of static dependent jar-file names. normally you will provide your dependency/package names as arguments. 
#jar.dependencies=

#-----------------------------------------------------------------------------
# Packages-Dependencies
# known packages and their comma-separated maven-dependencies. The <package-start> may be an entire package path,
# or only the beginning (like <country>.<company>). if you don't define versions, always the newest version will be
# loaded! please be careful while this may lead to unexpected libraries and problems! it is recommended to define
# all dependencies with versions on productive systems.
# 
# format: <package-start>=[<groupID>/]<artifactID>[-<version>],[[<groupID>/]<artifactID2>[-<version2>],...]
# 
# example-1: PACKAGE.org.hsqldb=hsqldb
# example-2: PACKAGE.org.datanucleus.api.jpa.PersistenceProviderImpl=org.datanucleus/datanucleus-core-4.0.0.FINAL,org.datanucleus/datanucleus-jpa-query-4.0.0.FINAL
#
# all given dependencies that match the value of 'package.exception.regex' will be removed/ignored!
#-----------------------------------------------------------------------------

# packages matching this regular expression will not be loaded
package.exception.regex=(de.tsl2.*)|(org.anonymous.project.*)

# build tools and generation
PACKAGE.org.apache.tools.ant=org.apache.ant/ant-launcher,org.apache.ant/ant-nodeps,org.apache.ant/ant
PACKAGE.org.hibernate.tool=org.hibernate/hibernate-tools

# apache-commons
PACKAGE.org.apache.commons.lang=org.apache.commons/commons-lang
PACKAGE.org.apache.commons.io=org.apache.commons/commons-io
PACKAGE.org.apache.commons.digester=org.apache.commons/commons-digester
PACKAGE.org.apache.commons.collections=org.apache.commons/commons-collections
PACKAGE.org.apache.commons.math=org.apache.commons/commons-math
PACKAGE.org.apache.commons.beanutils=org.apache.commons/commons-beanutils
PACKAGE.org.apache.commons.logging=org.apache.commons/commons-logging
PACKAGE.org.apache.commons.codec=org.apache.commons/commons-codec

# jdbc drivers
PACKAGE.org.hsqldb=hsqldb
PACKAGE.oracle.jdbc=com.oracle/ojdbc14
PACKAGE.org.apache.derby=derbyclient
#org.apache.derby=derby
PACKAGE.org.xerial=sqlite-jdbc
PACKAGE.org.postgresql=postgresql/postgresql
PACKAGE.com.h2database=h2
PACKAGE.com.mysql.jdbc=mysql/mysql-connector-java
PACKAGE.net.sourceforge.jtds=jtds
PACKAGE.org.firebirdsql.jdbc=jaybird-jdk17

# jpa persistence providers
PACKAGE.org.eclipse.persistence=eclipselink
PACKAGE.org.apache.openjpa=openjpa-all
PACKAGE.org.hibernate.ejb.HibernatePersistence=org.hibernate/hibernate-entitymanager
PACKAGE.org.datanucleus=datanucleus-core,datanucleus-jpa-query,datanucleus-rdbms
PACKAGE.de.tsl2.nano.ebeanprovider.EntityManager=org.avaje.ebeanorm/avaje-ebeanorm
PACKAGE.de.tsl2.nano.ormliteprovider.EntityManager=com.j256.ormlite/ormlite-core,com.j256.ormlite/ormlite-jdbc

# jndi initial context factories and container providers
PACKAGE.org.jboss.naming.remote.client.InitialContextFactory=org.jboss.jbossas/jboss-as-client
PACKAGE.org.jnp.interfaces.LocalOnlyContextFactory=
PACKAGE.com.sun.enterprise.naming.SerialInitContextFactory=org.glassfish.common/glassfish-naming
PACKAGE.org.glassfish.ejb.embedded.EJBContainerProviderImpl=org.glassfish.packager/glassfish-ejb

# java tools divers
PACKAGE.org.apache.velocity=velocity
PACKAGE.com.google.guava=guava
PACKAGE.org.junit=junit/junit
PACKAGE.org.dom4j=dom4j/dom4j
PACKAGE.org.docx4j=docx4j
PACKAGE.org.slf4j=slf4j-simple
