<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>tsl2.nano.restaccess</groupId>
	<version>1.0-SNAPSHOT</version>
	<name>TSL2 framework REST access</name>
	<url>http://maven.apache.org</url>
	<artifactId>tsl2.nano.restaccess</artifactId>
	<inceptionYear>2016</inceptionYear>
	<licenses>
		<license>
			<name>LGPL</name>
			<url>https://opensource.org/licenses/lgpl-2.1.php</url>
		</license>
	</licenses>
	<!-- <repositories> <repository> <id>local-libs</id> <url>file://${basedir}/lib</url> 
		</repository> </repositories> -->
	<properties>
		<projectname>skiller</projectname>
		<package>de.idv.skiller</package>
		<url>jdbc:h2:tcp://localhost:9092/${projectname}</url>
		<user>sa</user>
		<password>sa</password>
		<sql.dir>src/resources</sql.dir>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
	</properties>
	<dependencies>
		<!-- ejb api -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<version>1.0.0.Final</version>
		</dependency>

		<!-- <dependency>
			<groupId>tsl2.nano</groupId>
			<artifactId>common</artifactId>
			<version>1.0.0</version>
		</dependency> -->
		<!-- use the beancontainer -->
		<dependency>
			<groupId>tsl2.nano</groupId>
			<artifactId>tsl2.nano.common</artifactId>
			<scope>system</scope>
			<version>RELEASE</version>
			<systemPath>${basedir}\src\lib\tsl2.nano.common.1.1.2.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>tsl2.nano</groupId>
			<artifactId>serviceaccess</artifactId>
			<scope>system</scope>
			<version>RELEASE</version>
			<systemPath>${basedir}\src\lib\tsl2.nano.serviceaccess.1.0.2.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>tsl2.nano</groupId>
			<artifactId>directaccess</artifactId>
			<scope>system</scope>
			<version>RELEASE</version>
			<systemPath>${basedir}\src\lib\tsl2.nano.directaccess.0.0.5.jar</systemPath>
		</dependency>
		<!-- testing libraries -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
			<version>3.0.16.Final</version>
			<scope>test</scope>
		</dependency>
		<!-- to be runnable on other appservers than jboss/wildfly -->
		<!-- <dependency> <groupId>org.glassfish.jersey.core</groupId> <artifactId>jersey-client</artifactId> 
			<version>2.3.1</version> </dependency> <dependency> <groupId>org.glassfish.jersey.media</groupId> 
			<artifactId>jersey-media-json-jackson</artifactId> <version>2.3.1</version> 
			</dependency> -->
		<!-- REST libraries -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>3.0.12.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>3.0.16.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-servlet-initializer</artifactId>
			<version>3.0.16.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- inlude local libs defined for scope=system -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>post-clean</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</outputDirectory>
							<includeScope>system</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- generate backend database and entities -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<id>start-h2</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>org.h2.tools.Server</mainClass>
							<arguments>
								<argument>-baseDir</argument>
								<argument>./db</argument>
								<argument>-tcp</argument>
								<argument>-tcpPort</argument>
								<argument>9092</argument>
								<argument>-tcpAllowOthers</argument>
								<argument>-tcpDaemon</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>stop-h2</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>org.h2.tools.Server</mainClass>
							<arguments>
								<argument>-tcpShutdown</argument>
								<argument>tcp://localhost:9092</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>RELEASE</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>org.h2.Driver</driver>
					<url>${url}</url>
					<username>${user}</username>
					<password>${password}</password>
					<autocommit>true</autocommit>
					<skip>${maven.test.skip}</skip>
					<onError>continue</onError>
				</configuration>
				<executions>
					<execution>
						<id>create-db</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<srcFiles>
								<srcFile>${sql.dir}/drop-${projectname}.sql</srcFile>
								<srcFile>${sql.dir}/create-${projectname}.sql</srcFile>
								<srcFile>${sql.dir}/init-${projectname}.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<components>
						<component>
							<name>hbm2java</name>
							<implementation>jdbcconfiguration</implementation>
							<outputDirectory>src/main/java</outputDirectory>
						</component>
						<component>
							<name>hbm2doc</name>
							<implementation>jdbcconfiguration</implementation>
							<outputDirectory>src/main/doc</outputDirectory>
						</component>
					</components>
					<componentProperties>
						<revengfile>src/resources/reveng.xml</revengfile>
						<propertyfile>src/resources/database.properties</propertyfile>
						<packagename>${package}.beans</packagename>
						<jdk5>true</jdk5>
						<ejb3>true</ejb3>
					</componentProperties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>cglib</groupId>
						<artifactId>cglib-nodep</artifactId>
						<version>2.2.2</version>
					</dependency>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>RELEASE</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>generate-beans</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>hbm2java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- build the war file -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<warName>beancontainer</warName>
					<failOnMissingWebXml>false</failOnMissingWebXml>

				</configuration>
			</plugin>

			<!-- deploy to jboss or wildfly -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.7.Final</version>
				<configuration>
					<jbossHome>${jbossHome}</jbossHome>
					<hostname>${host}</hostname>
					<port>${port}</port>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>1.2.1.Final</version>
				<configuration>
					<filename>${warName}</filename>
					<jbossHome>${jbossHome}</jbossHome>
					<hostname>${host}</hostname>
					<port>${port}</port>
				</configuration>
			</plugin>
			<!-- deploy to glassfish -->
			<plugin>
				<groupId>org.glassfish.maven.plugin</groupId>
				<artifactId>maven-glassfish-plugin</artifactId>
				<version>2.1</version>
				<!-- <executions> <execution> <id>gf-undeploy</id> <goals> <goal>undeploy</goal> 
					</goals> <phase>clean</phase> </execution> <execution> <id>gf-deploy</id> 
					<goals> <goal>deploy</goal> </goals> <phase>package</phase> </execution> 
					</executions> -->
				<configuration>
					<user>admin</user>
					<glassfishDirectory>../glassfish4</glassfishDirectory>
					<domainDirectory>${glassfish.directory}/glassfish/domains/</domainDirectory>
					<!--<passwordFile>${basedir}/glassfishpasswordfile</passwordFile> -->
					<adminPassword>admin</adminPassword>
					<domain>
						<name>domain1</name>
						<adminPort>4848</adminPort>
						<httpPort>8080</httpPort>
						<httpsPort>8443</httpsPort>
					</domain>
					<components>
						<component>
							<name>beancontainer</name>
							<artifact>target/${warName}</artifact>
						</component>
					</components>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<description>TSL2 framework REST access</description>
</project>
