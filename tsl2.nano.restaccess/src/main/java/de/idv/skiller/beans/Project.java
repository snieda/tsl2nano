package de.idv.skiller.beans;
// Generated 06.06.2016 19:00:14 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name="PROJECT"
    ,schema="PUBLIC"
    ,catalog="SKILLER"
)
public class Project  implements java.io.Serializable {


     private Integer id;
     private String name;
     private String description;
     private Set<Party> parties = new HashSet<Party>(0);
     private Set<Skill> skills = new HashSet<Skill>(0);

    public Project() {
    }

	
    public Project(String name, String description) {
        this.name = name;
        this.description = description;
    }
    public Project(String name, String description, Set<Party> parties, Set<Skill> skills) {
       this.name = name;
       this.description = description;
       this.parties = parties;
       this.skills = skills;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    
    @Column(name="NAME", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="DESCRIPTION", nullable=false)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="PARTY_PROJECT", schema="PUBLIC", catalog="SKILLER", joinColumns = { 
        @JoinColumn(name="PROJECT", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="PARTY", nullable=false, updatable=false) })
    public Set<Party> getParties() {
        return this.parties;
    }
    
    public void setParties(Set<Party> parties) {
        this.parties = parties;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="PROJECT_SKILL", schema="PUBLIC", catalog="SKILLER", joinColumns = { 
        @JoinColumn(name="PROJECT", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="SKILL", nullable=false, updatable=false) })
    public Set<Skill> getSkills() {
        return this.skills;
    }
    
    public void setSkills(Set<Skill> skills) {
        this.skills = skills;
    }




}


