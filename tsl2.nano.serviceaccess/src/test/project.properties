###############################################################################
#Sun Dec 13 17:06:21 CET 2009
# configuration file for swartifex.architect projects
# only projects, having the following preconditions should use swartifex.architect:
# - one database
# - one app server
# - one persistence unit
# - one application
#
# this swartifex.architect version is using:
# - swartifex version 1.1.0
# - tsl2.nano.serviceaccess 0.0.1
#
# Guideline:
# the most fields are standard fields that should not be changed for the first
# time, if you use a simple build with glassfish and hsqldb.
# 
# but the following 6 fields must be changed for your project:
# - project.name
# - project.vendor
# - product.name
# - server.db.extern.sqlfile (will be used to create the database)
# - client.test.bean (used inside the first view class of the client)
# - appserver.home.dir (absolute path to your application server home)
###############################################################################

#project and package definitions - please use only alphanumeric characters (no dots etc.!)
project.name=testserver
project.lang=de
project.vendor=idvag.test
project.package=${project.lang}.${project.vendor}.${project.name}
#all workspace will be cleaned, copies with overwrites
project.overwrite=true
#logging level: info, warn, error, verbose, debug
build.log.level=info

#will be used inside manifest files
product.name=SWartifexArchitect Test Projekt
product.vendor=Thomas Schneider, www.idv-ag.de
product.version=0.0.1.A
product.branch=trunk
product.buildNr=0001

#-----------------------------------------------------------------------------
# server side definitions
#-----------------------------------------------------------------------------
server.lib.dir=../${project.name}.glassfish/lib
server.db.extern.lib=C:/Programme/oraclexe/app/oracle/product/10.2.0/server/jdbc/lib/ojdbc14_g.jar
server.db.extern.sqlfile=../../CREATE_TABLES_Standard.SQL
server.db-config.file=../${project.name}.server/src/resources/db/db-connection.properties
server.appserv-config.file=../${project.name}.server/src/resources/glassfish-config/domain.xml
server.lib.suffix=**/beans/service/local/**
server.version=
# -------------- applicationserver specifications --------------
#on using glassfish, the appserver.home.dir must be a full path! 
appserver.home.dir=c:/users/tom/idv/kion/javaee15
# --- only if you need an own domain, you should activate the following 4 fields ---
#appserver.create.domain=true
#server.db.extern=${project.name}-domain
#server.domain.portbase=10000
#server.domain.aminport=4848
server.db.extern=domain1
server.deploy.dir=${appserver.home.dir}/domains/${server.db.extern}/autodeploy

#-----------------------------------------------------------------------------
# client side definitions
#-----------------------------------------------------------------------------
client.lib.dir=../${project.name}.client/lib
client.jndi.file=../${project.name}.client/src/resources/jndi.properties
client.login.module=LoginJaas
# --- the test bean class will be used to create the first client view
client.test.bean=${project.lang}.${project.vendor}.${project.name}.beans.Steuerfall
client.deploy.dir=
client.version=

#-----------------------------------------------------------------------------
# shared definitions
#-----------------------------------------------------------------------------
shared.base.dir=../${project.name}.shared
shared.lib.dir=../${project.name}.shared/lib
shared.lib.suffix=**/beans/service/remote/**
shared.deploy.dir=
shared.version=
