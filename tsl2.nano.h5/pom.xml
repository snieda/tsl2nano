<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.sf.tsl2nano</groupId>
		<artifactId>tsl2.nano.h5-package</artifactId>
		<version>2.5.8-SNAPSHOT</version>
	</parent>
	<artifactId>tsl2.nano.h5</artifactId>
	<name>TSL2 Framework Html5 Extensions</name>
	<description>TSL2 Framework Html5 Extensions (WebServer, Html5Presentation, RuleCover, BeanConfigurator, LogicTable-Sheet, Expression-Descriptors for Actions, Rules, URLs, Queries)</description>
	<properties>
		<module.parent>${project.basedir}/..</module.parent>
		<keystore>${module.parent}/tsl2store</keystore>
		<alias>tsl2</alias>
		<storepass>${gpg.passphrase}</storepass>
		<jar-extension></jar-extension> <!-- previousely:-standalone-->
		<build.name>${project.artifactId}</build.name>
		<build.java>${maven.compiler.target}</build.java>
		<build.version>${project.version}</build.version>
		<build.number>2438</build.number>
		<build.time>${timestamp}</build.time>
		<build.user>${user.name}</build.user>
		<tsl2.nano.common.jar>tsl2.nano.common-${project.version}.jar</tsl2.nano.common.jar>
		<tsl2.nano.directaccess.jar>tsl2.nano.directaccess-${project.version}.jar</tsl2.nano.directaccess.jar>
		<tsl2.nano.serviceaccess.jar>tsl2.nano.serviceaccess-${project.version}.jar</tsl2.nano.serviceaccess.jar>
		<tsl2.nano.incubation.jar>tsl2.nano.incubation-${project.version}.jar</tsl2.nano.incubation.jar>
		<tsl2.nano.cursus.jar>tsl2.nano.cursus-${project.version}.jar</tsl2.nano.cursus.jar>
		<tsl2.nano.cursus.jar>tsl2.nano.descriptor-${project.version}.jar</tsl2.nano.cursus.jar>
		<tsl2.nano.simple-xml.jar>simple-xml-2.7.1.jar</tsl2.nano.simple-xml.jar>
		<tsl2.nano.resources.jar>tsl2.nano.h5.default-resources.jar</tsl2.nano.resources.jar>
		<tsl2.nano.sample.jar>tsl2.nano.h5.sample.jar</tsl2.nano.sample.jar>
		<build.debug>${maven.compiler.debug}</build.debug>
		<surefire.testFailureIgnore>false</surefire.testFailureIgnore>
		<maven.test.failure.ignore>false</maven.test.failure.ignore>
		<!-- add-opens: don't add line breaks by yourself - this is done through maven (72 cols) -->
		<add-opens-unnamed>java.base/java.lang java.base/java.util java.base/java.text java.base/java.time.format java.base/java.lang.reflect java.base/javax.security.auth java.base/sun.reflect.annotation java.base/sun.security.x509 java.base/java.io java.base/sun.nio.ch java.base/java.net java.base/sun.security.ssl java.base/jdk.internal.module java.xml/javax.xml.stream.events java.xml/org.w3c.dom java.xml/javax.xml.namespace jdk.management/com.sun.management.internal java.management/sun.management
		</add-opens-unnamed>
		<!-- WARN: add-exports only on compile scope otherwise jar file may be corrupt -->
		<add-export-unnamed>java.base/jdk.internal.module java.base/sun.security.x509 java.management/sun.management
		</add-export-unnamed>
	</properties>
	<build>
		<sourceDirectory>src/main</sourceDirectory>
		<testSourceDirectory>src/test</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/test</directory>
				<excludes>
					<exclude>**/*.class</exclude>
					<exclude>**/persistence.xml</exclude>
				</excludes>
			</testResource>
		</testResources>
		<resources>
			<resource>
				<directory>src/main</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource><!-- don't insert project properties -->
				<directory>src/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource><!-- insert project properties, only on batch/script files -->
				<directory>src/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.bat</include>
					<include>**/*.cmd</include>
					<include>**/*.sh</include>
				</includes>
			</resource>
			<resource>
				<directory>../tsl2.nano.core/target/classes</directory>
				<includes>
					<include>**/core/**</include>
					<include>org/**/*.class</include>
				</includes>
			</resource>
			<resource>
				<directory>../tsl2.nano.core/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.datastructure/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.common/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.generator/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.operation/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.descriptor/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.specification/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.repeatable/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.cursus/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.logicstructure/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.vnet/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.serviceaccess/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.directaccess/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.jarresolver/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.incubation/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.replication/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${project.build.directory}/${project.build.finalName}.lib</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${version.dependency.plugin}</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>tree</goal>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<includeArtifactIds>
								tsl2.nano.datastructure, tsl2.nano.common, tsl2.nano.generator, tsl2.nano.operation,
								tsl2.nano.descriptor, tsl2.nano.specification, tsl2.nano.incubation, tsl2.nano.vnet,
								tsl2.nano.logicstructure, tsl2.nano.repeatable, tsl2.nano.cursus, tsl2.nano.terminal,
								tsl2.nano.serviceaccess,tsl2.nano.directaccess,tsl2.nano.jarresolver,tsl2.nano.ormliteprovider,tsl2.nano.ebeanprovider,tsl2.nano.replication,simple-xml,snakeyaml,Java-WebSocket,xchart,VectorGraphics2D,javax.json,javax.json-api,jboss-ejb-api_3.2_spec,hibernate-jpa-2.1-api,jboss-transaction-api_1.2_spec,jboss-interceptor-api,jboss-connector-api_1.7_spec,javax.json-api,jboss-jaxrs-api,jboss-annotations-api,slf4j-api,jakarta.persistence-api
							</includeArtifactIds>
							<!-- standalone:<includeArtifactIds>ant,ant-launcher,ant-nodeps,antlr,mysql-connector-java,h2,app,avalon-framework,commands,common,commons-collections,commons-logging,contenttype,dom4j,freemarker,hibernate-commons-annotations,hibernate-core,hibernate-entitymanager,hibernate-jpa-2.1-api,hibernate-tools,jandex,javassist,jboss-logging,jboss-logging-annotations,jobs,jta,jtidy,logkit,org.eclipse.jdt.core,osgi,preferences,registry,runtime,servlet-api,text,hibernate-tools,log4j,slf4j-api,slf4j-simple</includeArtifactIds> -->
							<!-- <excludeArtifactIds> commons-codec,javax.json,junit,jasperreports,javassist,avalon-framework-impl,avalon-framework-api,avalon-framework-impl,fop,velocity,tools,aspectjweaver,jersey-bundle,icu4j 
								</excludeArtifactIds> -->
							<!-- <excludeTransitive>true</excludeTransitive> -->
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- FIXME: It is not recommended to create more than one jar file -->
				<artifactId>maven-jar-plugin</artifactId>
				<version>${version.jar.plugin}</version>
				<executions>
					<execution>
						<id>standard-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>virgin</classifier>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>de.tsl2.nano.h5.Loader</mainClass>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
								<manifestEntries>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<Application-Name>Nano.H5</Application-Name>
									<Application-Class>de.tsl2.nano.h5.NanoH5</Application-Class>
									<Application-Source>${application.source}</Application-Source>
									<Application-redirect>/download</Application-redirect>
									<Permissions>all-permissions</Permissions>
                                    <Add-Modules>ALL-SYSTEM</Add-Modules>
                                    <Add-Opens>
										${add-opens-unnamed}
									</Add-Opens>
                                    <!-- <Add-Exports>
										${add-export-unnamed}
                                    </Add-Exports> -->
								</manifestEntries>
							</archive>
							<excludes>
								<exclude>standalone.zip</exclude>
								<exclude>**/persistence.xml</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>default-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>de.tsl2.nano.h5.Loader</mainClass>
								</manifest>
								<manifestEntries>
									<Application-Name>Nano.H5</Application-Name>
									<Application-Class>de.tsl2.nano.h5.NanoH5</Application-Class>
									<Application-Source>${application.source}</Application-Source>
									<Application-redirect>/download</Application-redirect>
									<Permissions>all-permissions</Permissions>
                                    <Add-Opens>
										${add-opens-unnamed}
									</Add-Opens>
                                    <!-- <Add-Exports>
										${add-export-unnamed}
                                    </Add-Exports> -->
								</manifestEntries>
							</archive>
							<excludes>
								<exclude>**/persistence.xml</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<goals>
							<goal>sign</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<includeClassifiers>
								<includeClassifier>signed</includeClassifier>
							</includeClassifiers>
							<includes>
								<include>**/*-signed.jar</include>
							</includes>
							<keystore>${keystore}</keystore>
							<alias>${alias}</alias>
							<storepass>${storepass}</storepass>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>container-war</id>
						<goals>
							<goal>war</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>war</classifier>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>de.tsl2.nano.h5.Loader</mainClass>
								</manifest>
								<manifestEntries>
									<Application-Name>Nano.H5</Application-Name>
									<Application-Class>de.tsl2.nano.h5.NanoH5</Application-Class>
									<Application-Source>${application.source}</Application-Source>
									<Application-redirect>/download</Application-redirect>
									<Permissions>all-permissions</Permissions>
                                    <Add-Opens>
										${add-opens-unnamed}
									</Add-Opens>
                                    <!-- <Add-Exports>
										${add-export-unnamed}
                                    </Add-Exports> -->
								</manifestEntries>
							</archive>
							<!-- excludes don't work! -->
							<packagingExcludes>standalone.zip</packagingExcludes>
							<packagingExcludes>**/persistence.xml</packagingExcludes>
							<webXml>src/resources/WEB-INF/web.xml</webXml>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-antrun-plugin</artifactId>
	            <executions>
	                <execution>
	                    <!-- <id>start-nanoh5-jar</id> -->
						<id>default-cli</id>
	                    <phase>pre-integration-test</phase>
	                    <goals>
	                        <goal>run</goal>
	                    </goals>
	                    <inherited>true</inherited>
	                    <configuration>
	                    	<failOnError>true</failOnError>
	                    	<skip>${skipTests}</skip><!-- to be runnable through mvn antrun:run -->
	                        <target>
								<echo>STARTING ${project.build.finalName} on pre-integration-test</echo>
								<echoproperties />
								<!--output="${project.build.directory}/pre-integration-test/pre-integration-test.log" -->
								<mkdir dir="${project.build.directory}/pre-integration-test" />
								<java jar="${project.build.directory}/${project.artifactId}-${project.version}${jar-extension}.jar"
									dir="${project.build.directory}/pre-integration-test"
									fork="true"
									spawn="true"
								>
									<jvmarg value="--add-modules=ALL-SYSTEM" />
									   <jvmarg value="--illegal-access=warn" />
									   <jvmarg value="--add-opens=java.base/java.lang=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/java.util=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/java.text=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/java.time.format=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/java.lang.reflect=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/sun.reflect.annotation=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/sun.security.x509=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/javax.security.auth=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/java.io=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/sun.nio.ch=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/java.net=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.base/sun.security.ssl=ALL-UNNAMED" />
										<jvmarg value="--add-opens=java.xml/javax.xml.stream.events=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.xml/org.w3c.dom=ALL-UNNAMED" />
									   <jvmarg value="--add-opens=java.xml/javax.xml.namespace=ALL-UNNAMED" />
										<jvmarg value="--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED" />
										<jvmarg value="--add-opens=java.management/sun.management=ALL-UNNAMED" />
									<sysproperty key="app.server.running" value="true" />
	                                <sysproperty key="app.database.internal.server.run" value="true" />
	                                <sysproperty key="websocket.use" value="true" />
	                                <sysproperty key="tsl2nano.offline" value="true" />
	                                <sysproperty key="tsl2.nano.test" value="true" />
	                                <sysproperty key="app.show.startpage" value="false" />
									<sysproperty key="app.update.interval.days" value="-1" />
									<sysproperty key="app.stop.allow.system.exit" value="false" />
									<sysproperty key="app.session.anticsrf" value="false" />>
								</java>
								<sleep seconds="10" />
								<echo>RESUMING ${project.build.finalName} integration-test</echo>
	                        </target>
	                    </configuration>
	                </execution>
					</executions>
	        </plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.java-websocket</groupId>
			<artifactId>Java-WebSocket</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
			<version>1.19.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.generator</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.incubation</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.vnet</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.cursus</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.jarresolver</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.ormliteprovider</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.ebeanprovider</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.replication</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.autotest</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> // H2LuceneIntegrationTest noc working with newer h2.
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>runtime</scope>
		</dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit4.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.200</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.7.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.4.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-tools</artifactId>
			<version>5.6.15.Final</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf -->
		<dependency><!-- internally used by thymeleaf!!! -->
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-simple</artifactId>
			<version>2.1.0-alpha1</version>
		</dependency>
		<dependency>
		    <groupId>com.hynnet</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.70.0</version>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- <dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.10.0</version>
			<scope>test</scope>
		</dependency> -->
		<dependency>
		    <groupId>org.thymeleaf</groupId>
		    <artifactId>thymeleaf</artifactId>
		    <version>3.1.3.RELEASE</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		  <groupId>org.apache.lucene</groupId>
		  <artifactId>lucene-core</artifactId>
		  <version>5.5.5</version>
		<scope>test</scope>
	</dependency>
	<dependency>
			<!-- H2 1.4.199 seems not to be compatible with newer version of lucene (like 7.1.0) -->
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-analyzers-common</artifactId>
		<version>5.5.5</version>
	  <scope>test</scope>
  </dependency>
		<dependency>
		  <groupId>org.apache.lucene</groupId>
		  <artifactId>lucene-queryparser</artifactId>
		  <version>5.5.5</version>
		<scope>test</scope>
	</dependency>
	<dependency>
	    <groupId>com.github.stephenc.jcip</groupId>
	    <artifactId>jcip-annotations</artifactId>
	    <version>1.0-1</version>
	    <scope>test</scope>
	  </dependency>
	  <dependency>
		<groupId>org.graalvm.js</groupId>
		<artifactId>js</artifactId>
		<version>22.3.5</version>
	    <scope>test</scope>
	  </dependency>  
	  <dependency>
		<groupId>org.graalvm.js</groupId>
		<artifactId>js-scriptengine</artifactId>
		<version>22.3.5</version>
	    <scope>test</scope>
	  </dependency>
	</dependencies>
</project>
