<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.sf.tsl2nano</groupId>
		<artifactId>tsl2.nano.h5-package</artifactId>
		<version>2.1</version>
	</parent>
	<artifactId>tsl2.nano.h5</artifactId>
	<name>TSL2 framework Html5 Extensions</name>
	<description>TSL2 framework Html5 Extensions (WebServer, Html5Presentation, RuleCover, BeanConfigurator, LogicTable-Sheet, Expression-Descriptors for Actions, Rules, URLs, Queries)</description>
	<!-- TODO: create property file with versions like in build-tsl.nano.h5.properties -->
	<properties>
		<module.parent>..</module.parent>
		<keystore>${module.parent}/tsl2store</keystore>
		<alias>tsl2</alias>
		<storepass>${gpg.passphrase}</storepass>
	</properties>
	<build>
		<sourceDirectory>src/main</sourceDirectory>
		<testSourceDirectory>src/test</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/test</directory>
				<excludes><exclude>**/*.class</exclude></excludes>
			</testResource>
		</testResources>
		<resources>
			<resource>
				<directory>src/main</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/resources</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.core/target/classes</directory>
				<includes>
					<include>**/core/**</include>
					<include>org/**/*.class</include>
				</includes>
			</resource>
			<resource>
				<directory>../tsl2.nano.core/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.common/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.operation/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.descriptor/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.specification/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.repeatable/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.logicstructure/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.vnet/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.serviceaccess/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.directaccess/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.jarresolver/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../tsl2.nano.incubation/target/classes</directory>
				<excludes>
					<exclude>**/*.class</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${project.build.directory}/${project.build.finalName}.lib</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>tree</goal>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<includeArtifactIds>tsl2.nano.common,tsl2.nano.operation, tsl2.nano.descriptor, tsl2.nano.specification, tsl2.nano.incubation, tsl2.nano.vnet, tsl2.nano.logicstructure, tsl2.nano.repeatable, tsl2.nano.terminal, tsl2.nano.serviceaccess,tsl2.nano.directaccess,tsl2.nano.jarresolver,tsl2.nano.ormliteprovider,tsl2.nano.ebeanprovider,simple-xml,snakeyaml,Java-WebSocket,xchart,VectorGraphics2D,javax.json,javax.json-api,jboss-ejb-api_3.2_spec,hibernate-jpa-2.1-api,jboss-transaction-api_1.2_spec,jboss-interceptor-api,jboss-connector-api_1.7_spec,javax.json-api,jboss-jaxrs-api,jboss-annotations-api
							</includeArtifactIds>
							<!-- standalone:<includeArtifactIds>ant,ant-launcher,ant-nodeps,antlr,mysql-connector-java,h2,app,avalon-framework,commands,common,commons-collections,commons-logging,contenttype,dom4j,freemarker,hibernate-commons-annotations,hibernate-core,hibernate-entitymanager,hibernate-jpa-2.1-api,hibernate-tools,jandex,javassist,jboss-logging,jboss-logging-annotations,jobs,jta,jtidy,logkit,org.eclipse.jdt.core,osgi,preferences,registry,runtime,servlet-api,text,hibernate-tools,log4j,slf4j-api,slf4j-simple</includeArtifactIds> -->
							<!-- <excludeArtifactIds> commons-codec,javax.json,junit,jasperreports,javassist,avalon-framework-impl,avalon-framework-api,avalon-framework-impl,fop,velocity,tools,aspectjweaver,jersey-bundle,icu4j 
								</excludeArtifactIds> -->
							<!-- <excludeTransitive>true</excludeTransitive> -->
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- FIXME: It is not recommended to create more than one jar file -->
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>standard-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>virgin</classifier>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>de.tsl2.nano.h5.Loader</mainClass>
								</manifest>
								<manifestEntries>
									<Application-Name>Nano.H5</Application-Name>
									<Application-Class>de.tsl2.nano.h5.NanoH5</Application-Class>
									<Application-Source>${application.source}</Application-Source>
									<Application-redirect>/download</Application-redirect>
									<Permissions>all-permissions</Permissions>
								</manifestEntries>
							</archive>
							<excludes>
								<exclude>standalone.zip</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>standalone-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>standalone</classifier>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>de.tsl2.nano.h5.Loader</mainClass>
								</manifest>
								<manifestEntries>
									<Application-Name>Nano.H5</Application-Name>
									<Application-Class>de.tsl2.nano.h5.NanoH5</Application-Class>
									<Application-Source>${application.source}</Application-Source>
									<Application-redirect>/download</Application-redirect>
									<Permissions>all-permissions</Permissions>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
					<execution>
						<id>signed-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>signed</classifier>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>de.tsl2.nano.h5.Loader</mainClass>
								</manifest>
								<manifestEntries>
									<Application-Name>Nano.H5</Application-Name>
									<Application-Class>de.tsl2.nano.h5.NanoH5</Application-Class>
									<Application-Source>${application.source}</Application-Source>
									<Application-redirect>/download</Application-redirect>
									<Permissions>all-permissions</Permissions>
								</manifestEntries>
							</archive>
							<!-- <archive> <manifest> <addClasspath>true</addClasspath> <classpathLayoutType>repository</classpathLayoutType> 
								</manifest> </archive> <includes> <include>../**/core/**</include> <include>../**/resources/**</include> 
								<include>${project.build.outputDirectory}/**/h5/**</include> <include>${project.build.directory}/${project.build.finalName}.lib/**</include> 
								</includes> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<goals>
							<goal>sign</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<includeClassifiers>
								<includeClassifier>signed</includeClassifier>
							</includeClassifiers>
							<includes>
								<include>**/*-signed.jar</include>
							</includes>
							<keystore>${keystore}</keystore>
							<alias>${alias}</alias>
							<storepass>${storepass}</storepass>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>container-war</id>
						<goals>
							<goal>war</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>war</classifier>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>de.tsl2.nano.h5.Loader</mainClass>
								</manifest>
								<manifestEntries>
									<Application-Name>Nano.H5</Application-Name>
									<Application-Class>de.tsl2.nano.h5.NanoH5</Application-Class>
									<Application-Source>${application.source}</Application-Source>
									<Application-redirect>/download</Application-redirect>
									<Permissions>all-permissions</Permissions>
								</manifestEntries>
							</archive>
							<!-- excludes don't work! -->
							<packagingExcludes>standalone.zip</packagingExcludes>
							<webXml>src/resources/WEB-INF/web.xml</webXml>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin> <!-- WHY IS IT NOT STARTED ON PRE_INTEGRATION-TEST??? -->
				<groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-antrun-plugin</artifactId>
	            <executions>
	                <execution>
	                    <id>start-nanoh5-jar</id>
	                    <phase>pre-integration-test</phase>
	                    <goals>
	                        <goal>run</goal>
	                    </goals>
	                    <inherited>true</inherited>
	                    <configuration>
	                    	<failOnError>true</failOnError>
	                    	<!--  <skip>${skipTests}</skip> -->
	                        <tasks>
	                            <java jar="target/${project.build.finalName}-standalone.jar"
	                            	  dir="target/test"
	                                  fork="true"
	                                  spawn="true">
	                                <sysproperty key="app.server.running" value="true" />
	                                <sysproperty key="websocket.use" value="false" />
	                                
	                                <!-- <arg value="-xyz" /> <arg value="123" /> -->
	                            </java>
	                        </tasks>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
		</plugins>
	</build>
	<dependencies>
	<!-- the standalone.zip will include the prepared file src/resources/stanalone.zip -->
		<dependency>
			<groupId>org.java-websocket</groupId>
			<artifactId>Java-WebSocket</artifactId>
			<version>1.3.0</version>
		</dependency><!-- https://mvnrepository.com/artifact/net.sourceforge.htmlunit/htmlunit -->
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.29</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-bundle -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
			<version>1.19.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.incubation</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.vnet</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.jarresolver</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.ormliteprovider</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tsl2nano</groupId>
			<artifactId>tsl2.nano.ebeanprovider</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.196</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>6.0.6</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-tools -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-tools</artifactId>
			<version>4.3.5.Final</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf -->
		<dependency><!-- internally used by thymeleaf!!! -->
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-simple</artifactId>
		    <version>1.5.8</version>
		</dependency>
		<dependency>
		    <groupId>com.hynnet</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>1.1.3</version>
		</dependency>
		<dependency>
		    <groupId>org.thymeleaf</groupId>
		    <artifactId>thymeleaf</artifactId>
		    <version>3.0.9.RELEASE</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>
</project>