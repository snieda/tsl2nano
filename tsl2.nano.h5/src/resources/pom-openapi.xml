<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.sf.tsl2nano</groupId>
    <artifactId>tsl2.nano.h5-package</artifactId>
    <version>2.5.4</version>
  </parent>
  <artifactId>tsl2.nano.openapi</artifactId>
  <name>TSL2 Framework OpenAPI</name>
  <description>TSL2 Framework to generate openapi java clients</description>
  <properties>
    <module.parent>..</module.parent>
    <java.package>org.anonymous.project</java.package>
    <swagger-annotations-version>1.6.15</swagger-annotations-version>
    <jersey-version>2.29.1</jersey-version>
    <jackson-version>2.18.3</jackson-version>
  </properties>
  <dependencies>

<!-- openapitool with libary=<default> so generated classes need: okhttp3, gson  -->
	<dependency>
	    <groupId>com.google.code.gson</groupId>
	    <artifactId>gson</artifactId>
	    <version>2.12.1</version>
	</dependency>
	<dependency>
	    <groupId>com.squareup.okhttp3</groupId>
	    <artifactId>okhttp</artifactId>
	    <version>4.12.0</version>
	</dependency>
	<dependency>
	    <groupId>javax.annotation</groupId>
	    <artifactId>javax.annotation-api</artifactId>
	    <version>1.3.2</version>
	</dependency>
  <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>logging-interceptor</artifactId>
      <version>4.12.0</version>
  </dependency>
  <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.client</artifactId>
      <version>1.0.2</version>
  </dependency>
  <dependency>
      <groupId>io.gsonfire</groupId>
      <artifactId>gson-fire</artifactId>
      <version>1.9.0</version>
  </dependency>

    <!-- HTTP client: jersey-client -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey-version}</version>
    </dependency>

<!-- openapitool with libary=native, so generated classes need: jackson  -->
    <!-- JSON processing: jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-base</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson-version}</version>
    </dependency>
  <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson-version}</version>
  </dependency>
  <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.6</version>
  </dependency>

  <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.12.0</version>
      <scope>test</scope>
  </dependency>

    <!-- <dependency>
      <groupId>net.sf.tsl2nano</groupId>
      <artifactId>tsl2.nano.core</artifactId>
      <version>${project.version}</version>
    </dependency> -->
        <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.4.0-b180830.0359</version>
    </dependency>
    <!-- dependencies are needed for the client being generated -->

    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${swagger-annotations-version}</version>
    </dependency>


    <!-- Base64 encoding that works in both JVM and Android -->
    <!-- <dependency>
      <groupId>com.brsanthu</groupId>
      <artifactId>migbase64</artifactId>
      <version>2.2</version>
    </dependency> -->

  </dependencies>
  <build>
    <plugins>
      <!-- plugin to generate code frop openapi.json -->
<plugin>
    <groupId>org.openapitools</groupId>
    <artifactId>openapi-generator-maven-plugin</artifactId>
    <version>7.12.0</version>
    <executions>
        <execution>
            <goals>
                <goal>generate</goal>
            </goals>
            <configuration>
                <inputSpec>openapi.yaml</inputSpec>
                <generatorName>java</generatorName>
                <configOptions>
                   <sourceFolder>generated-src</sourceFolder>
                </configOptions>
            </configuration>
        </execution>
    </executions>
</plugin>

      <!-- plugin to generate openapi.json from code -->
      <plugin>
        <groupId>com.github.kongchen</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <version>3.1.8</version>
        <configuration>
          <apiSources>
            <apiSource>
            <outputFormats>json,yaml</outputFormats>
              <springmvc>false</springmvc>
              <locations>
                <location>generated-src/${java.package}</location>
              </locations>
              <schemes>
                <scheme>http</scheme>
                <scheme>https</scheme>
              </schemes>
              <host>localhost:8080</host>
              <basePath>/api</basePath>
              <info>
                <title>OpenApi for ${java.package}</title>
                <version>v1</version>
                <description>
                  OpenApi for ${java.package}
                </description>
                <license>
                  <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                  <name>Apache 2.0</name>
                </license>
              </info>
              <securityDefinitions>
                <securityDefinition>
                  <name>basicAuth</name>
                  <type>basic</type>
                </securityDefinition>
                <!-- <securityDefinition>
                  <json>/securityDefinition.json</json>
                </securityDefinition> -->
              </securityDefinitions>
              <outputPath>${basedir}/doc/generated/document.html</outputPath>
              <swaggerDirectory>${basedir}/doc/generated/swagger-ui</swaggerDirectory>
              <!-- <swaggerApiReader>com.wordnik.swagger.jaxrs.reader.DefaultJaxrsApiReader</swaggerApiReader> -->
              <attachSwaggerArtifact>true</attachSwaggerArtifact>
              <modelConverters>io.swagger.validator.BeanValidator</modelConverters>
              <operationIdFormat>{{className}}_{{methodName}}_{{httpMethod}}</operationIdFormat>
              <externalDocs>
                <description>Example external docs</description>
                <url>https://example.com/docs</url>
              </externalDocs>
            </apiSource>
          </apiSources>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <!-- Adding dependency to swagger-hibernate-validations to enable the BeanValidator as a custom
             model converter -->
          <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-hibernate-validations</artifactId>
            <version>1.5.6</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>