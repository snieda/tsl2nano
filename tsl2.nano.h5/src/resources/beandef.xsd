<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://sourceforge.net/projects/tsl2nano" xmlns:ns1="http://sourceforge.net/projects/tsl2nano">
  <xs:element name="beanDefinition">
    <xs:complexType>
  	  <xs:all minOccurs="0">
        <xs:element ref="ns1:presentable"/>
        <xs:element ref="ns1:valueExpression"/>
        <xs:element ref="ns1:isconnected"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:attribute"/>
      </xs:all>
      <xs:attribute name="clazz" use="optional" type="xs:NCName"/>
      <xs:attribute name="isNested" use="optional" type="xs:boolean"/>
      <xs:attribute name="isdefault" use="optional" type="xs:boolean"/>
      <xs:attribute name="name" use="optional" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="valueExpression">
    <xs:complexType>
      <xs:attribute name="expression" use="optional" type="xs:anyURI"/>
      <xs:attribute name="type" use="optional" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="isconnected" type="xs:boolean"/>
  <xs:element name="attribute">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ns1:attributeDefinition"/>
      </xs:sequence>
      <xs:attribute name="name" use="optional" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="attributeDefinition">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ns1:declaring"/>
        <xs:element ref="ns1:constraint"/>
        <xs:element minOccurs="0" ref="ns1:temporalType"/>
        <xs:element minOccurs="0" ref="ns1:description"/>
        <xs:element ref="ns1:presentable"/>
        <xs:element minOccurs="0" ref="ns1:columnDefinition"/>
      </xs:sequence>
      <xs:attribute name="cascading" use="optional" type="xs:boolean"/>
      <xs:attribute name="composition" use="optional" type="xs:boolean"/>
      <xs:attribute name="generatedValue" use="optional" type="xs:boolean"/>
      <xs:attribute name="id" use="optional" type="xs:boolean"/>
      <xs:attribute name="unique" use="optional" type="xs:boolean"/>
      <xs:attribute name="doValidation" use="optional" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="declaring">
    <xs:complexType>
      <xs:attribute name="class" use="optional"/>
      <xs:attribute name="declaringClass" use="optional" type="xs:NCName"/>
      <xs:attribute name="name" use="optional" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="constraint">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="ns1:format"/>
        <xs:element minOccurs="0" ref="ns1:defaultValue"/>
        <xs:element ref="ns1:scale"/>
        <xs:element ref="ns1:precision"/>
      </xs:sequence>
      <xs:attribute name="length" use="optional" type="xs:integer"/>
      <xs:attribute name="nullable" use="optional" type="xs:boolean"/>
      <xs:attribute name="type" use="optional" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="format">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="ns1:type"/>
        <xs:element minOccurs="0" ref="ns1:pattern"/>
        <xs:element minOccurs="0" ref="ns1:parser"/>
        <xs:element minOccurs="0" ref="ns1:entry"/>
      </xs:sequence>
      <xs:attribute name="class" use="optional"/>
      <xs:attribute name="fullMatch" type="xs:boolean"/>
      <xs:attribute name="isAbleToParse" type="xs:boolean"/>
      <xs:attribute name="maxCharacterCount" type="xs:integer"/>
      <xs:attribute name="parsingType" type="xs:NCName"/>
      <xs:attribute name="precision" type="xs:integer"/>
      <xs:attribute name="regExpFlags" type="xs:integer"/>
      <xs:attribute name="scale" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="type" type="xs:NCName"/>
  <xs:element name="pattern" type="xs:string"/>
  <xs:element name="parser">
    <xs:complexType>
      <xs:attribute name="parsingType" use="optional" type="xs:NCName"/>
      <xs:attribute name="postfix" type="xs:NCName"/>
      <xs:attribute name="precision" use="optional" type="xs:integer"/>
      <xs:attribute name="scale" use="optional" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="entry">
    <xs:complexType mixed="true">
      <xs:attribute name="pattern" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="defaultValue">
    <xs:complexType mixed="true">
      <xs:attribute name="class" use="optional" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="scale" type="xs:integer"/>
  <xs:element name="precision" type="xs:integer"/>
  <xs:element name="temporalType" type="xs:NCName"/>
  <xs:element name="columnDefinition">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="ns1:summary"/>
        <xs:element ref="ns1:presentable"/>
      </xs:sequence>
      <xs:attribute name="columnIndex" use="optional" type="xs:integer"/>
      <xs:attribute name="isSortUpDirection" use="optional" type="xs:boolean"/>
      <xs:attribute name="name" use="optional" type="xs:NCName"/>
      <xs:attribute name="sortIndex" use="optional" type="xs:integer"/>
      <xs:attribute name="standardSummary" type="xs:boolean"/>
      <xs:attribute name="width" use="optional" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="summary">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ns1:expression"/>
      </xs:sequence>
      <xs:attribute name="class" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="expression" type="xs:string"/>
  <xs:element name="presentable">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="ns1:icon"/>
        <xs:sequence minOccurs="0">
          <xs:element ref="ns1:label"/>
          <xs:element ref="ns1:description"/>
        </xs:sequence>
        <xs:element minOccurs="0" ref="ns1:enabler"/>
      </xs:sequence>
      <xs:attribute name="class" use="optional"/>
      <xs:attribute name="nesting" type="xs:boolean"/>
      <xs:attribute name="searchable" use="optional" type="xs:boolean"/>
      <xs:attribute name="style" use="optional" type="xs:integer"/>
      <xs:attribute name="type" use="optional" type="xs:integer"/>
      <xs:attribute name="visible" use="optional" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="icon" type="xs:string"/>
  <xs:element name="label" type="xs:anyURI"/>
  <xs:element name="enabler">
    <xs:complexType>
      <xs:attribute name="active" use="optional" type="xs:boolean"/>
      <xs:attribute name="class" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="description" type="xs:anyURI"/>
</xs:schema>
