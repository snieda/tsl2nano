package org.anonymous.project;
// Generated 27.11.2015 18:21:32 by Hibernate Tools 4.3.1.Final


import java.math.BigDecimal;
import java.sql.Blob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name="ITEM"
    ,catalog="PUBLIC"
)
public class Item  implements java.io.Serializable {


     private int id;
     private Organisation organisation;
     private Classification classification;
     private Type type;
     private String name;
     private Date start;
     private Date end;
     private BigDecimal value;
     private String description;
     private Blob icon;
     private Set<Property> properties = new HashSet<Property>(0);
     private Set<Chargeitem> chargeitems = new HashSet<Chargeitem>(0);

    public Item() {
    }

	
    public Item(int id, Organisation organisation, Classification classification, Type type, String name, Date start, BigDecimal value) {
        this.id = id;
        this.organisation = organisation;
        this.classification = classification;
        this.type = type;
        this.name = name;
        this.start = start;
        this.value = value;
    }
    public Item(int id, Organisation organisation, Classification classification, Type type, String name, Date start, Date end, BigDecimal value, String description, Blob icon, Set<Property> properties, Set<Chargeitem> chargeitems) {
       this.id = id;
       this.organisation = organisation;
       this.classification = classification;
       this.type = type;
       this.name = name;
       this.start = start;
       this.end = end;
       this.value = value;
       this.description = description;
       this.icon = icon;
       this.properties = properties;
       this.chargeitems = chargeitems;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORGA", nullable=false)
    public Organisation getOrganisation() {
        return this.organisation;
    }
    
    public void setOrganisation(Organisation organisation) {
        this.organisation = organisation;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLASS", nullable=false)
    public Classification getClassification() {
        return this.classification;
    }
    
    public void setClassification(Classification classification) {
        this.classification = classification;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TYPE", nullable=false)
    public Type getType() {
        return this.type;
    }
    
    public void setType(Type type) {
        this.type = type;
    }

    
    @Column(name="NAME", nullable=false, length=64)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="START", nullable=false, length=19)
    public Date getStart() {
        return this.start;
    }
    
    public void setStart(Date start) {
        this.start = start;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="END", length=19)
    public Date getEnd() {
        return this.end;
    }
    
    public void setEnd(Date end) {
        this.end = end;
    }

    
    @Column(name="VALUE", nullable=false, precision=128, scale=0)
    public BigDecimal getValue() {
        return this.value;
    }
    
    public void setValue(BigDecimal value) {
        this.value = value;
    }

    
    @Column(name="DESCRIPTION", length=256)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="ICON")
    public Blob getIcon() {
        return this.icon;
    }
    
    public void setIcon(Blob icon) {
        this.icon = icon;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set<Property> getProperties() {
        return this.properties;
    }
    
    public void setProperties(Set<Property> properties) {
        this.properties = properties;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set<Chargeitem> getChargeitems() {
        return this.chargeitems;
    }
    
    public void setChargeitems(Set<Chargeitem> chargeitems) {
        this.chargeitems = chargeitems;
    }




}


